[gd_resource type="VisualShader" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeColorOp" id=10]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeExpression" id=11]
size = Vector2( 479.28, 224.28 )
expression = "output = vec3(UV.x + time, UV.y + time, 1.0)"

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 3

[sub_resource type="VisualShaderNodeScalarConstant" id=22]
constant = 60.0

[sub_resource type="VisualShaderNodeVectorOp" id=23]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=24]

[sub_resource type="VisualShaderNodeColorOp" id=25]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeExpression" id=26]
size = Vector2( 479.28, 224.28 )
expression = "output = vec3(UV.x + time, UV.y + time, 1.0)"

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 3

[sub_resource type="VisualShaderNodeScalarConstant" id=29]
constant = 100.0

[sub_resource type="OpenSimplexNoise" id=30]
seed = 1
octaves = 6
period = 32.0
persistence = 0.4

[sub_resource type="NoiseTexture" id=31]
seamless = true
noise = SubResource( 30 )

[sub_resource type="VisualShaderNodeTexture" id=32]
texture = SubResource( 31 )
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=33]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFresnel" id=42]
output_port_for_preview = 0
default_input_values = [ 2, true, 3, 2.0 ]

[sub_resource type="VisualShaderNodeColorConstant" id=14]
constant = Color( 0.957312, 0.924802, 0.66937, 1 )

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarConstant" id=16]
constant = 2.0

[sub_resource type="OpenSimplexNoise" id=36]
octaves = 6
period = 32.0
persistence = 0.4

[sub_resource type="NoiseTexture" id=35]
seamless = true
noise = SubResource( 36 )

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = SubResource( 35 )
texture_type = 1

[resource]
code = "shader_type spatial;
render_mode specular_disabled;




void vertex() {
// Output:0

}

void fragment() {
// Input:40
	vec3 n_out40p0 = NORMAL;

// Fresnel:32
	float n_in32p3 = 2.00000;
	float n_out32p0 = pow(clamp(dot(n_out40p0, VIEW), 0.0, 1.0), n_in32p3);

// Output:0
	ALPHA = n_out32p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1415.23, 204.547 )
modes/specular = 4
nodes/fragment/0/position = Vector2( 400, 140 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -400, 580 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( -580, 720 )
nodes/fragment/7/node = SubResource( 19 )
nodes/fragment/7/position = Vector2( -1480, -300 )
nodes/fragment/12/node = SubResource( 10 )
nodes/fragment/12/position = Vector2( -1180, -300 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( -2020, -300 )
nodes/fragment/13/size = Vector2( 479.28, 224.28 )
nodes/fragment/13/input_ports = "0,0,time;"
nodes/fragment/13/output_ports = "0,1,output;"
nodes/fragment/13/expression = "output = vec3(UV.x + time, UV.y + time, 1.0)"
nodes/fragment/14/node = SubResource( 20 )
nodes/fragment/14/position = Vector2( -2560, -260 )
nodes/fragment/15/node = SubResource( 21 )
nodes/fragment/15/position = Vector2( -2320, -240 )
nodes/fragment/16/node = SubResource( 22 )
nodes/fragment/16/position = Vector2( -2560, -180 )
nodes/fragment/17/node = SubResource( 23 )
nodes/fragment/17/position = Vector2( -60, 600 )
nodes/fragment/18/node = SubResource( 24 )
nodes/fragment/18/position = Vector2( -340, 700 )
nodes/fragment/19/node = SubResource( 25 )
nodes/fragment/19/position = Vector2( -1180, -40 )
nodes/fragment/20/node = SubResource( 26 )
nodes/fragment/20/position = Vector2( -2020, -60 )
nodes/fragment/20/size = Vector2( 479.28, 224.28 )
nodes/fragment/20/input_ports = "0,0,time;"
nodes/fragment/20/output_ports = "0,1,output;"
nodes/fragment/20/expression = "output = vec3(UV.x + time, UV.y + time, 1.0)"
nodes/fragment/21/node = SubResource( 27 )
nodes/fragment/21/position = Vector2( -2540, -20 )
nodes/fragment/22/node = SubResource( 28 )
nodes/fragment/22/position = Vector2( -2320, 0 )
nodes/fragment/23/node = SubResource( 29 )
nodes/fragment/23/position = Vector2( -2560, 60 )
nodes/fragment/24/node = SubResource( 32 )
nodes/fragment/24/position = Vector2( -1460, -60 )
nodes/fragment/25/node = SubResource( 33 )
nodes/fragment/25/position = Vector2( -800, -100 )
nodes/fragment/32/node = SubResource( 42 )
nodes/fragment/32/position = Vector2( -880, 340 )
nodes/fragment/40/node = SubResource( 49 )
nodes/fragment/40/position = Vector2( -1340, 320 )
nodes/fragment/connections = PoolIntArray( 7, 0, 12, 0, 13, 0, 7, 0, 16, 0, 15, 1, 14, 0, 15, 0, 15, 0, 13, 0, 4, 0, 17, 0, 6, 0, 18, 0, 6, 0, 18, 1, 6, 0, 18, 2, 18, 0, 17, 1, 24, 0, 19, 0, 20, 0, 24, 0, 23, 0, 22, 1, 21, 0, 22, 0, 22, 0, 20, 0, 12, 0, 25, 0, 19, 0, 25, 1, 32, 0, 0, 1, 40, 0, 32, 0 )
